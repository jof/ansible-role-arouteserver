---
- name: "install ARouteServer dependencies"
  become: True
  package:
    name: "{{ item }}"
    state: present
  with_items:
  - "{% if ansible_distribution == 'CentOS' %}python-devel{% else %}{% if ansible_python_version is version('3.0', '>=') %}python3-dev{% else %}python-dev{% endif %}{% endif %}"
  - "{% if ansible_distribution == 'CentOS' %}python-pip{% else %}{% if ansible_python_version is version('3.0', '>=') %}python3-pip{% else %}python-pip{% endif %}{% endif %}"
  - "{% if ansible_distribution == 'CentOS' %}python-virtualenv{% else %}{% if ansible_python_version is version('3.0', '>=') %}python3-virtualenv{% else %}python-virutalenv{% endif %}{% endif %}"
  - gcc

- name: "upgrade pip and setuptools"
  pip:
    virtualenv: "{{ arouteserver_venv_dir }}"
    name:
    - pip
    - setuptools
    extra_args: "--upgrade"
  tags:
  - upgrade

- name: "is this an upgrade request ('upgrade' tag)?"
  command: "true"
  register: arouterserver_upgrade_not_present
  changed_when: False

# Option 1: install from PyPI repository when arouteserver_local_package_file is not set.
# sets: arouteserver_pypi_install
- name: "install PyPI package via pip"
  pip:
    virtualenv: "{{ arouteserver_venv_dir }}"
    name: arouteserver
    extra_args: "{% if arouterserver_upgrade_not_present is not defined %}--upgrade{% endif %}"
  register: arouteserver_pypi_install
  changed_when: >
    arouteserver_pypi_install.stdout is defined and (
    "for arouteserver: finished with status 'done'" in arouteserver_pypi_install.stdout or
    "Successfully installed arouteserver" in arouteserver_pypi_install.stdout
    )
  when: arouteserver_local_package_file is undefined or not arouteserver_local_package_file
  tags:
  - upgrade

# Option 2: install from local file when arouteserver_local_package_file is set.
# sets: arouteserver_local_package
- name: "copy ARouteServer local package to host"
  copy:
    src: "{{ arouteserver_local_package_file }}"
    dest: "{{ arouteserver_var }}/arouteserver.tar.gz"
  when: arouteserver_local_package_file is defined and arouteserver_local_package_file
  register: arouteserver_local_package
  tags:
  - upgrade
- name: "install local package via pip"
  pip:
    virtualenv: "{{ arouteserver_venv_dir }}"
    name: "{{ arouteserver_var }}/arouteserver.tar.gz"
    extra_args: "{% if arouterserver_upgrade_not_present is not defined %}--upgrade{% endif %}"
  register: arouteserver_local_install
  changed_when: >
    "for arouteserver: finished with status 'done'" in arouteserver_local_install.stdout or
    "Successfully installed arouteserver" in arouteserver_local_install.stdout
  when: arouteserver_local_package_file is defined and arouteserver_local_package_file and arouteserver_local_package.changed
  tags:
  - upgrade

- name: "arouteserver directory exists?"
  stat:
    path: "{{ arouteserver_dir }}"
  register: arouteserver_dir_exists
  tags:
  - upgrade

- name: "run 'arouteserver setup'"
  command: "{{ arouteserver_bin }} setup --dest-dir {{ arouteserver_dir }}"
  register: arouteserver_setup
  when: arouteserver_dir_exists.stat.exists == False
  tags:
  - upgrade

- name: "copy any local custom file to {{ arouteserver_dir }}"
  template:
    src: "{{ item }}"
    dest: "{{ arouteserver_dir }}/"
  with_fileglob:
  - ../templates/config/*
  register: custom_files

- name: "run 'arouteserver setup-templates'"
  command: "{{ arouteserver_bin }} setup-templates"
  when: arouteserver_pypi_install.changed or
        arouteserver_local_install.changed
  notify:
  - "arouteserver: reconfigure general policies"
  - "arouteserver: rebuild rs config files"
  tags:
  - upgrade
